name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      # - qa
      # - staging
      # - production
  pull_request:
    branches:
      - main
      # - qa
      # - staging
      # - production

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Start SSH agent
      run: eval $(ssh-agent)
      
    - name: Set up SSH
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

    - name: Add SSH key
      run: ssh-add -v <(echo "${{ secrets.EC2_SSH_KEY }}")

    # - name: Add SSH key
    #   run: ssh-add -v ~/.ssh/id_rsa    

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Install dependencies
      run: npm install

    - name: Compile TypeScript
      run: npm run build

    - name: Run code
      run: npm start
      
    - name: Run tests
      run: npm test

    # - name: Add EC2 host key to known_hosts
      # run: |
        # echo "ec2-18-134-249-218.eu-west-2.compute.amazonaws.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEArG5i8+BdY..." >> ~/.ssh/known_hosts

        
    - name: Add EC2 host key to known_hosts
      run: |
            ssh-keyscan -H ec2-18-134-249-218.eu-west-2.compute.amazonaws.com >> ~/.ssh/known_hosts
      

    - name: Deploy to QA EC2
      run: |
        ssh -o StrictHostKeyChecking=no ec2-user@ec2-18-134-249-218.eu-west-2.compute.amazonaws.com <<EOF
          cd ~/my-project/ci-cd
          git pull origin main
          # Add any other commands you need to run to deploy your application
        EOF

    # - name: Deploy to QA
    #   run: |
    #     ssh ec2-18-134-249-218.eu-west-2.compute.amazonaws.com "cd ~/my-project/ci-cd && git pull origin main"  

  # deploy_qa:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   if: github.ref == 'refs/heads/qa'

  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v2

  #   - name: Mock QA Deployment
  #     run: echo "Deploying to QA environment..."
      
  # deploy_staging:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   if: github.ref == 'refs/heads/staging'

  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v2

  #   - name: Mock Staging Deployment
  #     run: echo "Deploying to Staging environment..."

  # deploy_production:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   if: github.ref == 'refs/heads/production'

  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v2

  #   - name: Mock Production Deployment
  #     run: echo "Deploying to Production environment..."
