name: CI Pipeline

on: [push]

jobs:
  ci:
    runs-on: ubuntu-latest

    services:
      selenium:
        image: selenium/standalone-chrome:latest
        ports:
          - 4444:4444

    steps:
      - name: Checkout frontend repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build frontend Docker image
        run: |
          cd my-blog
          docker build -t my-blog-frontend .

      - name: Save frontend Docker image as artifact
        run: |
          docker save my-blog-frontend | gzip > my-blog-frontend.tar.gz

      - name: Upload frontend Docker image
        uses: actions/upload-artifact@v2
        with:
          name: my-blog-frontend
          path: my-blog-frontend.tar.gz

      - name: Checkout backend repository
        uses: actions/checkout@v2
        with:
          repository: mywyau/tarnish
          path: backend-repo
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build backend Docker image
        run: |
          cd backend-repo
          docker build -t my-blog-backend .

      - name: Save backend Docker image as artifact
        run: |
          docker save my-blog-backend | gzip > my-blog-backend.tar.gz

      - name: Upload backend Docker image
        uses: actions/upload-artifact@v2
        with:
          name: my-blog-backend
          path: my-blog-backend.tar.gz

      - name: Download frontend Docker image
        uses: actions/download-artifact@v2
        with:
          name: my-blog-frontend

      - name: Load frontend Docker image
        run: |
          gunzip -c my-blog-frontend.tar.gz | docker load

      - name: Run frontend unit tests
        run: |
          docker run --rm my-blog-frontend npm test

      - name: Download backend Docker image
        uses: actions/download-artifact@v2
        with:
          name: my-blog-backend

      - name: Load backend Docker image
        run: |
          gunzip -c my-blog-backend.tar.gz | docker load

      - name: Run backend Docker container
        run: |
          docker run -d -p 8080:8080 --name backend my-blog-backend

      - name: Run frontend Docker container
        run: |
          docker run -d -p 3000:3000 --name frontend my-blog-frontend

      - name: Wait for services to be ready
        run: |
          sleep 15  # Adjust the wait time if necessary

      - name: Run Selenium tests
        run: |
          sbt -Denvironment=githubActions -Dheadless=true test

      - name: Clean up
        run: |
          docker stop frontend backend
          docker rm frontend backend
          docker rmi my-blog-frontend my-blog-backend
